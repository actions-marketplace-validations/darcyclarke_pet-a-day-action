"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestResponse = exports.UseUserImageResponse = exports.SaveImageResponse = exports.UserImagesResponseSingleImage = exports.UserImagesResponseNoImages = exports.UserImagesResponse = exports.AddressesResponse = exports.ExistsResponse = void 0;
const method_responses_1 = require("../../Domain/method-responses");
const stub = __importStar(require("./json-response-stubs"));
const xml = __importStar(require("./xml-response-stubs"));
function ExistsResponse() {
    const response = new method_responses_1.ExistsMethodResponse("");
    response.json = stub.existsJsonResponse;
    response.parseMembers();
    response.success = true;
    return Promise.resolve(response);
}
exports.ExistsResponse = ExistsResponse;
function AddressesResponse() {
    const response = new method_responses_1.AddressesMethodResponse(xml.addressesXml);
    response.json = stub.addressesJsonResponse;
    response.parseMembers();
    return Promise.resolve(response);
}
exports.AddressesResponse = AddressesResponse;
function UserImagesResponse() {
    const response = new method_responses_1.UserImagesMethodResponse(xml.userImagesXml);
    response.json = stub.userImagesJsonResponse;
    response.parseMembers();
    return Promise.resolve(response);
}
exports.UserImagesResponse = UserImagesResponse;
function UserImagesResponseNoImages() {
    const response = new method_responses_1.UserImagesMethodResponse(xml.userImagesNoneXml);
    response.json = stub.userImagesNoneJsonResponse;
    response.parseMembers();
    return Promise.resolve(response);
}
exports.UserImagesResponseNoImages = UserImagesResponseNoImages;
function UserImagesResponseSingleImage() {
    const response = new method_responses_1.UserImagesMethodResponse(xml.userImagesNoneXml);
    response.json = stub.userImagesSingleJsonResponse;
    response.parseMembers();
    return Promise.resolve(response);
}
exports.UserImagesResponseSingleImage = UserImagesResponseSingleImage;
function SaveImageResponse() {
    const response = new method_responses_1.SaveImageMethodResponse("");
    response.json = stub.saveImageResponse;
    response.parseMembers();
    return Promise.resolve(response);
}
exports.SaveImageResponse = SaveImageResponse;
function UseUserImageResponse() {
    const response = new method_responses_1.UseUserImageMethodResponse("");
    response.json = stub.useUserImageJsonResponse;
    response.parseMembers();
    return Promise.resolve(response);
}
exports.UseUserImageResponse = UseUserImageResponse;
function TestResponse() {
    const response = new method_responses_1.TestMethodResponse("");
    response.json = stub.testJsonResponse;
    response.parseMembers();
    return Promise.resolve(response);
}
exports.TestResponse = TestResponse;

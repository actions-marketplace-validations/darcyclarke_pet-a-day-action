"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestMethodCall = exports.DeleteUserImageMethodCall = exports.RemoveImageMethodCall = exports.UseUserImageMethodCall = exports.UserImagesMethodCall = exports.SaveImageMethodCall = exports.SaveDataMethodCall = exports.AddressesMethodCall = exports.ExistsMethodCall = void 0;
function convertToXmlRpcArray(collection) {
    const arrayValues = collection.reduce((accumulator, nextStringValue) => accumulator + `<value><string>${nextStringValue}</string></value>`, "");
    return `<array><data>${arrayValues}</data></array>`;
}
class ExistsMethodCall {
    constructor(emailHashes, password) {
        this.emailHashes = emailHashes;
        this.password = password;
    }
    get xml() {
        return `<methodCall>
              <methodName>grav.exists</methodName>
              <params>
                <param><value><struct>
                  <member>
                    <name>hashes</name>
                    <value>
                      ${convertToXmlRpcArray(this.emailHashes)}
                    </value>
                  </member>
                  <member>
                    <name>password</name>
                    <value>
                      <string>${this.password}</string>
                    </value>
                  </member>
                </struct></value></param>
              </params>
            </methodCall>`;
    }
}
exports.ExistsMethodCall = ExistsMethodCall;
class AddressesMethodCall {
    constructor(password) {
        this.password = password;
    }
    get xml() {
        return `<methodCall>
            <methodName>grav.addresses</methodName>
            <params>
                <param>
                    <value>
                        <struct>
                            <member>
                                <name>password</name>
                                <value>
                                    <string>${this.password}</string>
                                </value>
                            </member>
                        </struct>
                    </value>
                </param>
            </params>
        </methodCall>`;
    }
}
exports.AddressesMethodCall = AddressesMethodCall;
class SaveDataMethodCall {
    constructor(imageData, imageRating, password) {
        this.imageData = imageData;
        this.imageRating = imageRating;
        this.password = password;
    }
    get xml() {
        return `<methodCall>
              <methodName>grav.saveData</methodName>
              <params>
                  <param>
                      <value>
                          <struct>
                              <member>
                                  <name>data</name>
                                  <value>
                                      <string>${this.imageData}</string>
                                  </value>
                              </member>
                              <member>
                                  <name>rating</name>
                                  <value>
                                      <int>${this.imageRating}</int>
                                  </value>
                              </member>
                              <member>
                                  <name>password</name>
                                  <value>
                                      <string>${this.password}</string>
                                  </value>
                              </member>
                          </struct>
                      </value>
                  </param>
              </params>
          </methodCall>`;
    }
}
exports.SaveDataMethodCall = SaveDataMethodCall;
class SaveImageMethodCall {
    constructor(imageUrl, imageRating, password) {
        this.imageUrl = imageUrl;
        this.imageRating = imageRating;
        this.password = password;
    }
    get xml() {
        return `<methodCall>
                <methodName>grav.saveUrl</methodName>
                <params>
                    <param>
                        <value>
                            <struct>
                                <member>
                                    <name>url</name>
                                    <value>
                                        <string>${this.imageUrl}</string>
                                    </value>
                                </member>
                                <member>
                                    <name>rating</name>
                                    <value>
                                        <int>${Number(this.imageRating)}</int>
                                    </value>
                                </member>
                                <member>
                                    <name>password</name>
                                    <value>
                                        <string>${this.password}</string>
                                    </value>
                                </member>
                            </struct>
                        </value>
                    </param>
                </params>
            </methodCall>`;
    }
}
exports.SaveImageMethodCall = SaveImageMethodCall;
class UserImagesMethodCall {
    constructor(password) {
        this.password = password;
    }
    get xml() {
        return `<methodCall>
                <methodName>grav.userimages</methodName>
                <params>
                    <param>
                        <value>
                            <struct>
                                <member>
                                    <name>password</name>
                                    <value>
                                        <string>${this.password}</string>
                                    </value>
                                </member>
                            </struct>
                        </value>
                    </param>
                </params>
            </methodCall>`;
    }
}
exports.UserImagesMethodCall = UserImagesMethodCall;
class UseUserImageMethodCall {
    constructor(imageName, emailAddresses, password) {
        this.imageName = imageName;
        this.emailAddresses = emailAddresses;
        this.password = password;
    }
    get xml() {
        return `<methodCall>
                <methodName>grav.useUserimage</methodName>
                <params>
                    <param>
                        <value>
                            <struct>
                                <member>
                                    <name>userimage</name>
                                    <value>
                                        <string>${this.imageName}</string>
                                    </value>
                                </member>
                                <member>
                                    <name>addresses</name>
                                    <value>
                                        ${convertToXmlRpcArray(this.emailAddresses)}
                                    </value>
                                </member>
                                <member>
                                    <name>password</name>
                                    <value>
                                        <string>${this.password}</string>
                                    </value>
                                </member>
                            </struct>
                        </value>
                    </param>
                </params>
            </methodCall>`;
    }
}
exports.UseUserImageMethodCall = UseUserImageMethodCall;
class RemoveImageMethodCall {
    constructor(emailAddresses, password) {
        this.emailAddresses = emailAddresses;
        this.password = password;
    }
    get xml() {
        return `<methodCall>
                <methodName>grav.removeImage</methodName>
                <params>
                    <param>
                        <value>
                            <struct>
                                <member>
                                    <name>addresses</name>
                                    <value>
                                    ${convertToXmlRpcArray(this.emailAddresses)}
                                    </value>
                                </member>
                                <member>
                                    <name>password</name>
                                    <value>
                                        <string>${this.password}</string>
                                    </value>
                                </member>
                            </struct>
                        </value>
                    </param>
                </params>
            </methodCall>`;
    }
}
exports.RemoveImageMethodCall = RemoveImageMethodCall;
class DeleteUserImageMethodCall {
    constructor(imageName, password) {
        this.imageName = imageName;
        this.password = password;
    }
    get xml() {
        return `<methodCall>
                <methodName>grav.deleteUserimage</methodName>
                <params>
                    <param>
                        <value>
                            <struct>
                                <member>
                                    <name>userimage</name>
                                    <value>
                                        <string>${this.imageName}</string>
                                    </value>
                                </member>
                                <member>
                                    <name>password</name>
                                    <value>
                                        <string>${this.password}</string>
                                    </value>
                                </member>
                            </struct>
                        </value>
                    </param>
                </params>
            </methodCall>`;
    }
}
exports.DeleteUserImageMethodCall = DeleteUserImageMethodCall;
class TestMethodCall {
    constructor(password) {
        this.password = password;
    }
    get xml() {
        return `<methodCall>
              <methodName>grav.test</methodName>
              <params>
                <param><value><struct>
                  <member>
                    <name>password</name>
                    <value>
                      <string>${this.password}</string>
                    </value>
                  </member>
                </struct></value></param>
              </params>
            </methodCall>`;
    }
}
exports.TestMethodCall = TestMethodCall;

import { UserImage } from "./user-image";
import { UserAddress } from "./user-address";
export declare class MethodResponse {
    json: any;
    constructor(json: any);
    protected parseFieldValue(fieldValue: any): string;
}
export declare class ExistsMethodResponse extends MethodResponse {
    xml: string;
    constructor(xml: string);
    private _success;
    get success(): boolean;
    set success(value: boolean);
    parseMembers(): void;
}
export declare class AddressesMethodResponse extends MethodResponse {
    xml: string;
    private _userAddresses;
    get userAddresses(): UserAddress[];
    set userAddresses(value: UserAddress[]);
    constructor(xml: string);
    parseMembers(): void;
    private parseUserAddress;
}
export declare class SaveImageMethodResponse extends MethodResponse {
    xml: string;
    imageName: string;
    constructor(xml: string);
    parseMembers(): void;
}
export declare class UserImagesMethodResponse extends MethodResponse {
    xml: string;
    private _userImages;
    get userImages(): Array<UserImage>;
    set userImages(value: Array<UserImage>);
    constructor(xml: string);
    parseMembers(): never[] | undefined;
}
export declare class UseUserImageMethodResponse extends MethodResponse {
    xml: string;
    success: boolean;
    constructor(xml: string);
    parseMembers(): void;
}
export declare class RemoveImageMethodResponse extends MethodResponse {
    xml: string;
    success: boolean;
    constructor(xml: string);
    parseMembers(): void;
}
export declare class DeleteUserImageMethodResponse extends MethodResponse {
    xml: string;
    success: boolean;
    constructor(xml: string);
    parseMembers(): void;
}
export declare class TestMethodResponse extends MethodResponse {
    xml: string;
    response: number;
    constructor(xml: string);
    parseMembers(): void;
}

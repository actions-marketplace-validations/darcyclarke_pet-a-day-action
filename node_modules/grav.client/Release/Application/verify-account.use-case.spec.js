"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
require("jasmine");
const verify_account_use_case_1 = require("./verify-account.use-case");
const mock_factory_1 = require("../Common/TestDoubles/mock-factory");
const use_case_type_1 = require("./use-case-type");
describe("VerifyAccountUseCase", () => {
    let useCase;
    beforeAll(() => {
        useCase = new verify_account_use_case_1.VerifyAccountUseCase();
        useCase.client = mock_factory_1.mockClient(use_case_type_1.UseCaseType.VerifyAccount);
    });
    it("should work", () => __awaiter(void 0, void 0, void 0, function* () {
        const exists = yield useCase.execute();
        expect(exists).toBe(true);
    }));
});

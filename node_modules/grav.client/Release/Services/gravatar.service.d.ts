import { HttpShim } from "../Infrastructure/http-shim";
import { ImageRating } from "../Domain/image-rating";
import { AddressesMethodResponse, ExistsMethodResponse, UserImagesMethodResponse, SaveImageMethodResponse, UseUserImageMethodResponse, RemoveImageMethodResponse, DeleteUserImageMethodResponse, TestMethodResponse } from "../Domain/method-responses";
export declare class GravatarService {
    email: string;
    private _password;
    emailHash: string;
    http: HttpShim;
    get gravatarImageUrl(): string;
    constructor(userEmail: string, userPassword: string);
    hashEmail(email: string): string;
    exists(...emailAddresses: string[]): Promise<ExistsMethodResponse>;
    addresses(): Promise<AddressesMethodResponse>;
    userImages(): Promise<UserImagesMethodResponse>;
    saveImage(imageFilePath: string, imageRating?: ImageRating): Promise<SaveImageMethodResponse>;
    saveEncodedImage(base64String: string, imageRating?: ImageRating): Promise<SaveImageMethodResponse>;
    saveImageUrl(imageUrl: string, imageRating?: ImageRating): Promise<SaveImageMethodResponse>;
    useUserImage(imageName: string, ...emailAddresses: string[]): Promise<UseUserImageMethodResponse>;
    removeImage(...emailAddresses: string[]): Promise<RemoveImageMethodResponse>;
    deleteUserImage(imageName: string): Promise<DeleteUserImageMethodResponse>;
    test(): Promise<TestMethodResponse>;
}
